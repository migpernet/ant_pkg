<?xml version="1.0"?>

<launch>

    <arg name="world_name" default="$(find ant_pkg)/worlds/spawn.world" />
    <arg name="paused" default="true" />
    <arg name="gui" default="true" />   
    <arg name="model_name" default="ur5"/>

  ########################################
  # Load UR5 URDF
  ########################################
  <param name="robot_description" command="$(find xacro)/xacro '$(find ant_pkg)/urdf/ur5_with_cam.urdf.xacro'"/>

  ########################################
  # Load Robot Description - GAZEBO
  ########################################

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(arg world_name)"/> 
    <arg name="use_sim_time" value="true"/>   <!--o Gazebo usará o tempo de simulação (em vez do tempo real do sistema) para controlar a física e o movimento dos objetos-->
    <arg name="paused" value="$(arg paused)"/>
    <arg name="headless" value="false"/>  <!--false: com interface gráfica, true: sem interface gráfica-->
    <arg name="gui" value="$(arg gui)"/> <!--controla se a interface gráfica do Gazebo deve ser iniciada ou não.-->
  </include>
 
 <!-- node pkg="ant_pkg" type="spawn_table.py" name="spawn_table_model"/ -->
  
  <node name="spawn_robot"
        pkg="gazebo_ros"
        type="spawn_model"
        args="-model robot    
              -param robot_description
              -urdf
              -x 0
              -y 0
              -z 1.015   
              -Y 1.57
              -unpause"
        respawn="false"
        output="screen" />  


  ########################################
  # Load Parameters
  ########################################
  <!-- Load joint names into the parameter server -->
  <rosparam file="$(find ant_pkg)/config/joint_names.yaml" command="load" />

<!--Launch parameters of the algorithm
  <group ns="xxxxxx">
    <rosparam file="$(find ant_pkg)/config/xxxxx_param.yaml" />
  </group>

-->

  ########################################
  # Load Gripper Controllers
  ########################################
  <!--Load Robotiq Gripper Controller-->  
  <rosparam file="$(find ant_pkg)/controller/ur5gripper_controllers.yaml"
            command="load"/>

  <node name="gripper_controller_spawner"
        pkg="controller_manager"
        type="spawner"
        args="gripper_controller_vel"/>

  ########################################
  # Load UR5 Controllers
  # load velocity and position controllers
  ########################################
  <rosparam file="$(find ant_pkg)/controller/ur5_controllers1.yaml" command="load"/>

  <include file="$(find ur_description)/launch/load_ur5.launch"/>

  <!-- LOAD CONTROLLERS AND RUN -->
  <arg name="controllers" default="pos_based_pos_traj_controller"/>
  <!-- arg name="controllers" default="joint_state_controller position_controllers"/ --> 
  
  <node name="ros_control_controller_spawner"
        pkg="controller_manager"
        type="spawner"
        respawn="false"
        output="screen"
        args="$(arg controllers)" />

  <!-- LOAD CONTROLLERS IN STOP MODE -->
  <arg name="stopped_controllers"
       default="joint_group_vel_controller gripper_controller_pos"/>

  <node name="ros_control_controller_manager"
        pkg="controller_manager"
        type="controller_manager"
        respawn="false"
        output="screen"
        args="load $(arg stopped_controllers)" />
</launch>



